{"ast":null,"code":"import _classCallCheck from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/src/components/Header/Header.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { WrapHeader, HeaderText, WrapperLang } from './style/Header-styled';\nimport connect from \"react-redux/es/connect/connect\";\nimport { setLocal } from '../../redux/actions/locale';\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Header).apply(this, arguments));\n  }\n\n  _createClass(Header, [{\n    key: \"addLocalstorage\",\n    value: function addLocalstorage(dataLang) {\n      localStorage.setItem('alhubLang', dataLang);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(WrapHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(HeaderText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Header Page\"), React.createElement(WrapperLang, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this.props.setLocal('en');\n\n          _this.addLocalstorage('en');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"EN\"), \" |\", React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this.props.setLocal('ru');\n\n          _this.addLocalstorage('ru');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Ru\"))));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nHeader.propTypes = {\n  setLocal: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lang: state.locale.lang\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setLocal: setLocal\n})(Header);","map":{"version":3,"sources":["/Users/antonlapin/Desktop/projects/myprojects/Graveiz/src/components/Header/Header.js"],"names":["React","Fragment","PropTypes","WrapHeader","HeaderText","WrapperLang","connect","setLocal","Header","dataLang","localStorage","setItem","props","addLocalstorage","Component","propTypes","func","isRequired","mapStateToProps","state","lang","locale"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC,QAAoD,uBAApD;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,QAAT,QAAyB,4BAAzB;;IAEMC,M;;;;;;;;;;;;;oCACYC,Q,EAAU;AACxBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,QAAlC;AACD;;;6BACQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,OAAO,EAAE,mBAAK;AAAC,UAAA,KAAI,CAACG,KAAL,CAAWL,QAAX,CAAoB,IAApB;;AAA2B,UAAA,KAAI,CAACM,eAAL,CAAqB,IAArB;AAA2B,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,QAEE;AAAK,QAAA,OAAO,EAAE,mBAAK;AAAC,UAAA,KAAI,CAACD,KAAL,CAAWL,QAAX,CAAoB,IAApB;;AAA2B,UAAA,KAAI,CAACM,eAAL,CAAqB,IAArB;AAA2B,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAFF,CADF,CADF;AAWD;;;;EAhBkBb,KAAK,CAACc,S;;AAoB3BN,MAAM,CAACO,SAAP,GAAmB;AACjBR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,IAAV,CAAeC;AADR,CAAnB;;AAIA,IAAMC,eAAe,GAAE,SAAjBA,eAAiB,CAACC,KAAD,EAAW;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACE,MAAN,CAAaD;AADd,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA,QAAQ,EAARA;AAAD,CAAlB,CAAP,CAAqCC,MAArC,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { WrapHeader, HeaderText, WrapperLang } from './style/Header-styled';\nimport connect from \"react-redux/es/connect/connect\";\nimport { setLocal } from '../../redux/actions/locale'\n\nclass Header extends React.Component {\n  addLocalstorage(dataLang) {\n    localStorage.setItem('alhubLang', dataLang);\n  }\n  render() {\n    return (\n      <Fragment>\n        <WrapHeader>\n          <HeaderText>Header Page</HeaderText>\n          <WrapperLang>\n            <div onClick={()=> {this.props.setLocal('en'); this.addLocalstorage('en')}}>EN</div> |\n            <div onClick={()=> {this.props.setLocal('ru'); this.addLocalstorage('ru')}}>Ru</div>\n          </WrapperLang>\n        </WrapHeader>\n      </Fragment>\n    );\n  }\n\n}\n\nHeader.propTypes = {\n  setLocal: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps =(state) => {\n  return {\n    lang: state.locale.lang,\n  }\n};\n\nexport default connect(mapStateToProps, {setLocal})(Header);\n"]},"metadata":{},"sourceType":"module"}