{"ast":null,"code":"import _classCallCheck from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/antonlapin/Desktop/projects/myprojects/Graveiz/src/components/App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  * {\\n    padding: 0;\\n    margin: 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { createGlobalStyle } from 'styled-components';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './Layout';\nimport { addLocaleData } from \"react-intl\";\nimport en from 'react-intl/locale-data/en';\nimport ru from 'react-intl/locale-data/ru';\nimport { connect } from 'react-redux';\nimport messages from '../translations/messages';\nimport Header from './Header/Header';\naddLocaleData(en);\naddLocaleData(ru);\nvar GlobalStyle = createGlobalStyle(_templateObject());\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      locale: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var lang = this.props.lang;\n      return React.createElement(IntlProvider, {\n        locale: lang,\n        messages: messages[lang],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(GlobalStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  lang: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lang: state.locale.lang\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/antonlapin/Desktop/projects/myprojects/Graveiz/src/components/App.js"],"names":["React","Fragment","PropTypes","createGlobalStyle","IntlProvider","BrowserRouter","Layout","addLocaleData","en","ru","connect","messages","Header","GlobalStyle","App","props","state","locale","lang","Component","propTypes","string","isRequired","mapStateToProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEAL,aAAa,CAACC,EAAD,CAAb;AACAD,aAAa,CAACE,EAAD,CAAb;AAEA,IAAMI,WAAW,GAAGV,iBAAH,mBAAjB;;IAOMW,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFgB;AAKjB;;;;6BACQ;AAAA,UACCC,IADD,GACU,KAAKH,KADf,CACCG,IADD;AAEP,aACE,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEA,IAAtB;AAA4B,QAAA,QAAQ,EAAEP,QAAQ,CAACO,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADJ,CADF,CADF;AAWD;;;;EApBelB,KAAK,CAACmB,S;;AAuBxBL,GAAG,CAACM,SAAJ,GAAgB;AACdF,EAAAA,IAAI,EAAEhB,SAAS,CAACmB,MAAV,CAAiBC;AADT,CAAhB;;AAIA,IAAMC,eAAe,GAAE,SAAjBA,eAAiB,CAACP,KAAD,EAAW;AAChC,SAAO;AACLE,IAAAA,IAAI,EAAEF,KAAK,CAACC,MAAN,CAAaC;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAACa,eAAD,CAAP,CAAyBT,GAAzB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { createGlobalStyle } from 'styled-components';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './Layout';\nimport { addLocaleData } from \"react-intl\";\nimport en from 'react-intl/locale-data/en';\nimport ru from 'react-intl/locale-data/ru';\nimport { connect } from 'react-redux';\nimport messages from '../translations/messages'\nimport Header from './Header/Header';\n\naddLocaleData(en);\naddLocaleData(ru);\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      locale: ''\n    };\n  }\n  render() {\n    const { lang } = this.props;\n    return (\n      <IntlProvider locale={lang} messages={messages[lang]}>\n        <BrowserRouter>\n            <Fragment>\n              <GlobalStyle />\n              <Header />\n              <Layout />\n            </Fragment>\n        </BrowserRouter>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  lang: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps =(state) => {\n  return {\n    lang: state.locale.lang,\n  }\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}